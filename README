This is just a simple experiment integrating the ruby-nagios library with an XMPP bot. 

This bot implements the following commands

    'roster' : Return the bot's current roster
    'host_downtime' : Schedule downtime for 1 hour for host
    'service_downtime' : Schedule downtime for 1 hour for service on host
    'ack_host' : Acknowledge host problem on host
    'services_down' : Return scheduled service downtimes for host
    'del_service_downtime' : Delete scheduled downtime for service on host
    'del_host_downtime' : Delete scheduled downtime for host
    'hostcomments' : Return comments for host
    'servicecomments' : Return comments for service on host

To setup the bot, you can call Bot.new(:config => 'path to config file'). The config file is just a yamlized hash.

:botname => The XMPP username of the bot, including domain.
:host =>  the XMPP server
:password => The XMPP users password
:status_log => Path to Nagios' status file
:cmd_file => Path to the Nagios command file

Alternativly, these can be passed directly to the Bot.new command, bypassing the config file.

This project uses a modified version of the ruby-nagios library. See http://code.google.com/p/ruby-nagios/ and https://github.com/ripienaar/ruby-nagios

Once you clone this repo, you need to initialize the submodules
  cd nagios-jabber
  git submodule init
  git submodule update

This will clone the ruby-nagios repository.